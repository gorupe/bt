(id,title,url,tag,status,httpcode) values(1,たいとる,http〜,音楽,action,200)

タイトルではなくて名前(name)の方がいいかも・・・
rails g scaffold bookmarks title:string uri:string tag:string status:string httpcode:string
rake db:migrate

insert into bookmarks (title,uri,created_at,updated_at) values ('yahoo','http://yahoo.co.jp',0,0);


update_attribute(name, value)
record.update_attribute(:name, "column22")

update_attributes(attributes)
record.update_attributes(:column1 => "column11")

update(id, attribute)
SomeRecords.update([1, 2], [{ :column1 => "column111" }, { :column2 => "column222" }])

update_all(updates, conditions)
SomeRecord.update_all("column1='column1'", "id=1")

detele_all(conditions)
SomeRecords.delete_all("id = 1")

destroy_all(conditions)
delete_all(conditions)と違って、関連するテーブルのレコードも削除する

<% form_for(レコード名)　do |f| %>
f.label→labeのlabelタグを表示
f.text_field→textのinputタグを表示
f.date_select→モデルで設定したフィールドをselectタグで選べるようにして表示
f.check_box→checkboxのinputタグを表示
f.submit→submitのinputタグを表示
<% end %>

検索
def find
  @テーブル名 = レコード名.all
  (:conditions=>["キー= ? OR キー = ?", params[:search_string], params[:search_string]])
end


<% form_for :モデル名, 変数, :url => { :action => "create" } do |変数| %>
<% form_for :bookmark, @bookmark, :url => { :action => "create" } do |f| %>
<% form_for(@bookmark) do |f| %>


パラメータを受け取るためにはRack式にやらないとダメだった。

GETの場合
@env['rack.request.query_string']
Rack::Utils.parse_query(@env['rack.request.query_string'])

POSTの場合
@env['rack.request.form_vars']
Rack::Utils.parse_query(@env['rack.request.form_vars'])


◆テスト
get :edit, :id => 1
post :update, :id => 1, :customer => {:name => 'tom'}

セッションについては、@request.session に直接指定します。
@request.session["key"] = "value"


