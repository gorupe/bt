●linkchecker on rails
＜ユーザーストーリー＞
「時間がない自分」として
「複数あるブックマークされたWebサイトの生存確認」をしたい
なぜなら「いちいち開いている時間がない」からだ

◎恒久的な自分専用ブックマーク。
◎ひたすらURLを登録していく。
◎そのURLが死んでいるかどうかをラクに確認する。

しばらくは並行稼働をするが、いずれ「own」と「lean」に分岐する。
ownは自分が使いやすいようにカスタマイズしたモデル。
leanは外に公開し、リーンメソッドで運用していくモデル。


＜＜Todo＞＞
◆action
・ディレクトリ内のARはリリース版と微妙に違うのでなんとかする。
・そもそもリーン用と自分版をもうちとわかりやすくする。ディレクトリも整理する。
・CSVimport + チェック。とりあえずCSV形式でインポートできること。
・フィルタリング(検索)。任意の文字列でタイトルとURLを検索できること。
・タグ検索リンク(tag,status,httpcode) => 複数のキーで絞り込めるようにできること。
・ソート。任意のキーでソートできること。
・CSVexport。とりあえずCSV形式でエクスポートできること。
・CSV形式でimportできるテキストボックス(pivotalにあるやつ)。
・ちゃんとしたMVCにする。

＄多データ処理
・同じ感じのドメインの検出。
・重複チェック => チェック基準はどうする？
・サービスとして公開するならば、データベースをユーザー毎にユニークなものが使えるようにする。
・データベース基盤の再検討 => sql? or xml? or yml?
・ignore機能追加
・ページング処理
・checklink押下時に「{処理件数}件処理します。」
・deleterecord終了後「＊＊件処理しました。」
＠文字コードに注意
・各レコード編集画面(tag,status)
＄ajaxバージョン
・Datatablesを使えるようにする。
・非同期ローディング


◆done
・URLの登録ができる。DBに追加されること。
・URLの生存確認ができる。生きてるリンクから200が返ってくること。
・URLの削除(とりあえずチェックボックスで)。チェックしたレコードが削除されること。
・生きてるリンクのフィルタリング。ステータスが"ok"のものだけ抽出されること。
＄initial release


◆not to do
・テストの作成 => rails自体の習熟度が低いため
・UIの考察 => 機能を優先するため
・バリデーション => 厳格なフォーマットはまだ不要
・一斉にアクセスして確認するスレッドな高速化 => 非同期表示をマスターしてから
・ルーティングが微妙
・検索結果をセッションに保持する => 重い実装のため
・CSSがクールでない
・自由に並べ替えできるようにする(ajaxで)
・一括削除ボックス => 文献が古すぎて書き方がわからない。時間かかりすぎ。(http://wiki.fdiary.net/rails/?AjaxOnRails)
・メールやAPIで登録する的な



タスク属性 ・feature ＠chore ％bug ＄release
